<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bill99.mam.platform.persistence.dao.SubRefundMapper">
  <resultMap id="BaseResultMap" type="com.bill99.mam.platform.persistence.entity.SubRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="sub_refund_No" jdbcType="BIGINT" property="subRefundNo" />
    <result column="refund_No" jdbcType="BIGINT" property="refundNo" />
    <result column="SUB_MERCHANT_UID" jdbcType="BIGINT" property="subMerchantUid" />
    <result column="orig_order_No" jdbcType="BIGINT" property="origOrderNo" />
    <result column="orig_sub_order_No" jdbcType="BIGINT" property="origSubOrderNo" />
    <result column="orig_order_item_No" jdbcType="BIGINT" property="origOrderItemNo" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    sub_refund_No, refund_No, SUB_MERCHANT_UID, orig_order_No, orig_sub_order_No, orig_order_item_No, 
    CREATE_TIME, UPDATE_TIME
  </sql>
  <select id="selectByExample" parameterType="com.bill99.mam.platform.persistence.entity.SubRefundExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_mock_sub_refund
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from t_mock_sub_refund
    where sub_refund_No = #{subRefundNo,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_mock_sub_refund
    where sub_refund_No = #{subRefundNo,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bill99.mam.platform.persistence.entity.SubRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="subRefundNo" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_mock_sub_refund (refund_No, SUB_MERCHANT_UID, orig_order_No, 
      orig_sub_order_No, orig_order_item_No, CREATE_TIME, 
      UPDATE_TIME)
    values (#{refundNo,jdbcType=BIGINT}, #{subMerchantUid,jdbcType=BIGINT}, #{origOrderNo,jdbcType=BIGINT}, 
      #{origSubOrderNo,jdbcType=BIGINT}, #{origOrderItemNo,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.bill99.mam.platform.persistence.entity.SubRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="subRefundNo" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_mock_sub_refund
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refundNo != null">
        refund_No,
      </if>
      <if test="subMerchantUid != null">
        SUB_MERCHANT_UID,
      </if>
      <if test="origOrderNo != null">
        orig_order_No,
      </if>
      <if test="origSubOrderNo != null">
        orig_sub_order_No,
      </if>
      <if test="origOrderItemNo != null">
        orig_order_item_No,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refundNo != null">
        #{refundNo,jdbcType=BIGINT},
      </if>
      <if test="subMerchantUid != null">
        #{subMerchantUid,jdbcType=BIGINT},
      </if>
      <if test="origOrderNo != null">
        #{origOrderNo,jdbcType=BIGINT},
      </if>
      <if test="origSubOrderNo != null">
        #{origSubOrderNo,jdbcType=BIGINT},
      </if>
      <if test="origOrderItemNo != null">
        #{origOrderItemNo,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.bill99.mam.platform.persistence.entity.SubRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_mock_sub_refund
    <set>
      <if test="refundNo != null">
        refund_No = #{refundNo,jdbcType=BIGINT},
      </if>
      <if test="subMerchantUid != null">
        SUB_MERCHANT_UID = #{subMerchantUid,jdbcType=BIGINT},
      </if>
      <if test="origOrderNo != null">
        orig_order_No = #{origOrderNo,jdbcType=BIGINT},
      </if>
      <if test="origSubOrderNo != null">
        orig_sub_order_No = #{origSubOrderNo,jdbcType=BIGINT},
      </if>
      <if test="origOrderItemNo != null">
        orig_order_item_No = #{origOrderItemNo,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sub_refund_No = #{subRefundNo,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bill99.mam.platform.persistence.entity.SubRefund">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_mock_sub_refund
    set refund_No = #{refundNo,jdbcType=BIGINT},
      SUB_MERCHANT_UID = #{subMerchantUid,jdbcType=BIGINT},
      orig_order_No = #{origOrderNo,jdbcType=BIGINT},
      orig_sub_order_No = #{origSubOrderNo,jdbcType=BIGINT},
      orig_order_item_No = #{origOrderItemNo,jdbcType=BIGINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP}
    where sub_refund_No = #{subRefundNo,jdbcType=BIGINT}
  </update>
</mapper>